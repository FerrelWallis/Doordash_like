{"version":3,"sources":["utils.js","components/FoodList.js","components/LoginForm.js","components/MyCart.js","components/SignupForm.js","App.js","reportWebVitals.js","index.js"],"names":["login","credential","loginUrl","username","password","fetch","method","headers","credentials","then","response","status","Error","signup","data","body","JSON","stringify","Option","Select","AddToCartButton","itemId","useState","loading","setLoading","title","type","icon","PlusOutlined","onClick","addItemToCart","message","success","catch","err","error","finally","FoodList","foodData","setFoodData","curRest","setCurRest","restaurants","setRestaurants","loadingRest","setLoadingRest","useEffect","json","restId","value","onSelect","placeholder","style","width","onChange","map","item","id","name","marginTop","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","Item","extra","src","imageUrl","alt","height","display","price","LoginForm","state","onFinish","setState","props","onSuccess","render","margin","rules","required","prefix","UserOutlined","Password","LockOutlined","htmlType","React","Component","Text","Typography","MyCart","cartVisible","setCartVisible","cartData","setCartData","checking","setChecking","onCloseDrawer","shape","onClose","visible","footer","justifyContent","strong","totalPrice","marginRight","disabled","orderItemList","length","itemLayout","Meta","menuItem","description","SignupForm","displayModal","handleCancel","signupOnClick","onCancel","destroyOnClose","initialValues","remember","preserve","Header","Layout","Content","Title","App","authed","setAuthed","className","level","color","lineHeight","marginBottom","float","padding","maxHeight","overflowY","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6add4bb5.chunk.js","sourcesContent":["export const login = (credential) => {\r\n    const loginUrl = `/login?username=${credential.username}&password=${credential.password}`;\r\n\r\n    return fetch(loginUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n    }).then((response) => {\r\n        if (response.status < 200 || response.status >= 300\r\n        ) {\r\n            throw Error(\"Fail to log in\");\r\n        }\r\n    });\r\n};\r\n\r\nexport const signup = (data) => {\r\n    const signupUrl = \"/signup\";\r\n\r\n    return fetch(signupUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n    }).then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to sign up\");\r\n        }\r\n    });\r\n};\r\n\r\n\r\nexport const getMenus = (restId) => {\r\n    return fetch(`/restaurants/${restId}/menu`).then((response) => {\r\n        if (response.status < 200 || response.status >= 300\r\n        ) {\r\n            throw Error(\"Fail to get menus\");\r\n        }\r\n\r\n        return response.json();\r\n    });\r\n};\r\n\r\nexport const getRestaurants = () => {\r\n    return fetch(\"/restaurants\").then((response) => {\r\n        if (response.status < 200 || response.status >= 300\r\n        ) {\r\n            throw Error(\"Fail to get restaurants\");\r\n        }\r\n\r\n        return response.json();\r\n    });\r\n};\r\n\r\nexport const getCart = () => {\r\n    return fetch(\"/cart\").then((response) => {\r\n        if (response.status < 200 || response.status >= 300\r\n        ) {\r\n            throw Error(\"Fail to get shopping cart data\");\r\n        }\r\n\r\n        return response.json();\r\n    });\r\n};\r\n\r\nexport const checkout = () => {\r\n    return fetch(\"/checkout\").then((response) => {\r\n        if (response.status < 200 || response.status >= 300\r\n        ) {\r\n            throw Error(\"Fail to checkout\");\r\n        }\r\n    });\r\n};\r\n\r\nexport const addItemToCart = (itemId) => {\r\n    return fetch(`/order/${itemId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n    }).then((response) => {\r\n        if (response.status < 200 || response.status >= 300\r\n        ) {\r\n            throw Error(\"Fail to add menu item to shopping cart\");\r\n        }\r\n    });\r\n};\r\n","//rst\r\nimport { Button, Card, List, message, Select, Tooltip } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { addItemToCart, getMenus, getRestaurants } from \"../utils\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst AddToCartButton = ({ itemId }) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const AddToCart = () => {\r\n        setLoading(true);\r\n        addItemToCart(itemId)\r\n            .then(() => message.success(`Successfully add item`))\r\n            .catch((err) => message.error(err.message))\r\n            .finally(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Tooltip title=\"Add to shopping cart\">\r\n            <Button\r\n                loading={loading}\r\n                type=\"primary\"\r\n                icon={<PlusOutlined />}\r\n                onClick={AddToCart}\r\n            />\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nconst FoodList = () => {\r\n    const [foodData, setFoodData] = useState([]);\r\n    const [curRest, setCurRest] = useState();\r\n    const [restaurants, setRestaurants] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [loadingRest, setLoadingRest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setLoadingRest(true);\r\n        getRestaurants()\r\n            .then((data) => {\r\n                setRestaurants(data);\r\n            })\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            })\r\n            .finally(() => {\r\n                setLoadingRest(false);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (curRest) {\r\n            setLoading(true);\r\n            getMenus(curRest)\r\n                .then((data) => {\r\n                    setFoodData(data);\r\n                })\r\n                .catch((err) => {\r\n                    message.error(err.message);\r\n                })\r\n                .finally(() => {\r\n                    setLoading(false);\r\n                });\r\n        }\r\n    }, [curRest]);\r\n\r\n    return (\r\n        <>\r\n            <Select\r\n                value={curRest}\r\n                onSelect={(value) => setCurRest(value)}\r\n                placeholder=\"Select a restaurant\"\r\n                loading={loadingRest}\r\n                style={{ width: 300 }}\r\n                onChange={() => {}}\r\n            >\r\n                {restaurants.map((item) => {\r\n                    return <Option key={item.id} value={item.id}>{item.name}</Option>;\r\n                })}\r\n            </Select>\r\n            {\r\n                curRest && (\r\n                <List\r\n                    style={{ marginTop: 20 }}\r\n                    loading={loading}\r\n                    grid={{\r\n                        gutter: 16,\r\n                        xs: 1,\r\n                        sm: 2,\r\n                        md: 4,\r\n                        lg: 4,\r\n                        xl: 3,\r\n                        xxl: 3,\r\n                    }}\r\n                    dataSource={foodData}\r\n                    renderItem={(item) => (\r\n                        <List.Item>\r\n                            {/*{item.name}*/}\r\n                            <Card\r\n                                title={item.name}\r\n                                extra={<AddToCartButton itemId={item.id} />}\r\n                            >\r\n                                <img\r\n                                    src={item.imageUrl}\r\n                                    alt={item.name}\r\n                                    style={{ height: 'auto', width: \"100%\", display: \"block\" }}\r\n                                />\r\n                                {`Price: ${item.price}`}\r\n                            </Card>\r\n                        </List.Item>\r\n                    )}\r\n                />)\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FoodList;","import { Button, Form, Input, message } from \"antd\";\r\nimport React from \"react\";\r\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { login } from \"../utils\";\r\n//rcc\r\n\r\nclass LoginForm extends React.Component {\r\n    state = {\r\n        loading: false,\r\n    };\r\n\r\n    onFinish = (data) => {\r\n        //step1: set loading true\r\n        //step2: send login request (call login api)\r\n        //step3: deal with login status\r\n        //step4: set loading false\r\n\r\n        this.setState({\r\n            loading: true,\r\n        });\r\n        login(data)\r\n            .then(() => { //success\r\n                message.success(`Login Successful`);\r\n                this.props.onSuccess();\r\n            })\r\n            .catch((err) => { //failed\r\n                message.error(err.message);\r\n            })\r\n            .finally(() => {\r\n                this.setState({\r\n                    loading: false,\r\n                });\r\n            });\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <Form\r\n                name=\"normal_login\"\r\n                onFinish={this.onFinish}\r\n                style={{\r\n                    width: 300,\r\n                    margin: \"auto\",\r\n                }}\r\n            >\r\n                <Form.Item\r\n                    name=\"username\"\r\n                    rules={[ //validation rules\r\n                        { required: true, message: \"Please input your Username!\" }\r\n                    ]}\r\n                >\r\n                    <Input prefix={<UserOutlined />} placeholder=\"Username\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[{ required: true, message: \"Please input your Password!\" }]}\r\n                >\r\n                    <Input.Password prefix={<LockOutlined />} placeholder=\"Password\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n\r\n                    <Button type=\"primary\"\r\n                            htmlType=\"submit\" // submit触发form的onFinish方法\r\n                            loading={this.state.loading}\r\n                    >\r\n                        Login\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    };\r\n}\r\n\r\n\r\n\r\nexport default LoginForm;","import { Button, Drawer, List, message, Typography } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { checkout, getCart } from \"../utils\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst MyCart = () => {\r\n    const [cartVisible, setCartVisible] = useState(false);\r\n    const [cartData, setCartData] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const [checking, setChecking] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!cartVisible) {\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        getCart()\r\n            .then((data) => {\r\n                setCartData(data);\r\n            })\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            });\r\n    }, [cartVisible]);\r\n\r\n    const onCheckOut = () => {\r\n        setChecking(true);\r\n        checkout()\r\n            .then(() => {\r\n                message.success(\"Successfully checkout\");\r\n                setCartVisible(false);\r\n            })\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            })\r\n            .finally(() => {\r\n                setChecking(false);\r\n            });\r\n    };\r\n\r\n    const onCloseDrawer = () => {\r\n        setCartVisible(false);\r\n    };\r\n\r\n    const onOpenDrawer = () => {\r\n        setCartVisible(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button type=\"primary\" shape=\"round\" onClick={onOpenDrawer}>\r\n                Cart\r\n            </Button>\r\n            <Drawer\r\n                title=\"My Shopping Cart\"\r\n                onClose={onCloseDrawer}\r\n                visible={cartVisible}\r\n                width={520}\r\n                footer={\r\n                    <div\r\n                        style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                        }}\r\n                    >\r\n                        <Text strong={true}>{`Total price: $${cartData?.totalPrice}`}</Text>\r\n                        <div>\r\n                            <Button onClick={onCloseDrawer} style={{ marginRight: 8 }}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button\r\n                                onClick={onCheckOut}\r\n                                type=\"primary\"\r\n                                loading={checking}\r\n                                disabled={loading || cartData?.orderItemList.length === 0}\r\n                            >\r\n                                Checkout\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            >\r\n                <List\r\n                    loading={loading}\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={cartData ? cartData.orderItemList : []}\r\n                    renderItem={(item) => (\r\n                        <List.Item>\r\n                            <List.Item.Meta\r\n                                title={item.menuItem.name}\r\n                                description={`$${item.price}`}\r\n                            />\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </Drawer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MyCart;","import { Button, Form, Input, message, Modal } from \"antd\";\r\nimport React from \"react\";\r\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { signup } from \"../utils\";\r\n\r\nclass SignupForm extends React.Component {\r\n    state = {\r\n        displayModal: false,\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            displayModal: false,\r\n        });\r\n    };\r\n\r\n    signupOnClick = () => {\r\n        this.setState({\r\n            displayModal: true,\r\n        });\r\n    };\r\n\r\n    onFinish = (data) => {\r\n        signup(data)\r\n            .then(() => {\r\n                this.setState({\r\n                    displayModal: false,\r\n                });\r\n                message.success(`Successfully signed up`);\r\n            })\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            });\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <>\r\n                <Button shape=\"round\" type=\"primary\" onClick={this.signupOnClick}>\r\n                    Register\r\n                </Button>\r\n                <Modal\r\n                    title=\"Register\"\r\n                    visible={this.state.displayModal}\r\n                    onCancel={this.handleCancel}\r\n                    footer={null}\r\n                    destroyOnClose={true}\r\n                >\r\n                    <Form\r\n                        name=\"normal_register\"\r\n                        initialValues={{ remember: true }}\r\n                        onFinish={this.onFinish}\r\n                        preserve={false}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"email\"\r\n                            rules={[{ required: true, message: \"Please input your email!\" }]}\r\n                        >\r\n                            <Input prefix={<UserOutlined />} placeholder=\"Email\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[\r\n                                { required: true, message: \"Please input your password!\" },\r\n                            ]}\r\n                        >\r\n                            <Input prefix={<LockOutlined />} placeholder=\"Password\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            rules={[\r\n                                { required: true, message: \"Please input your first name!\" },\r\n                            ]}\r\n                        >\r\n                            <Input placeholder=\"firstname\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            rules={[\r\n                                { required: true, message: \"Please input your last name!\" },\r\n                            ]}\r\n                        >\r\n                            <Input placeholder=\"lastname\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Register\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </>\r\n        );\r\n    };\r\n}\r\n\r\nexport default SignupForm;","import './App.css';\n// import React from \"react\";\nimport { Layout, Typography } from \"antd\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport FoodList from \"./components/FoodList\";\nimport LoginForm from \"./components/LoginForm\";\nimport MyCart from \"./components/MyCart\";\nimport SignupForm from \"./components/SignupForm\";\n\nconst { Header, Content } = Layout;\nconst { Title } = Typography;\n\nfunction App() {\n    const [authed, setAuthed] = useState(false);\n\n    return (\n        <Layout style={{ height: \"100vh\" }}>\n            <Header>\n                <div className=\"header\">\n                    <Title\n                        level={2}\n                        style={{ color: \"white\", lineHeight: \"inherit\", marginBottom: 0, float: \"left\" }}\n                    >\n                        Lai Food\n                    </Title>\n                    <div style={{float: \"right\"}} >{authed ? <MyCart /> : <SignupForm />}</div>\n                </div>\n            </Header>\n            <Content\n                style={{\n                    padding: \"50px\",\n                    maxHeight: \"calc(100% - 64px)\",\n                    overflowY: \"auto\",\n                }}\n            >\n                {authed ? (\n                    <FoodList />\n                ) : (\n                    <LoginForm onSuccess={() => setAuthed(true)} />\n                )}\n            </Content>\n        </Layout>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}